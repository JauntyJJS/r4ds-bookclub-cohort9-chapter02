---
title: |
  Chapter 2: <br> 
  Data Visualisation
subtitle: |
  For the R For Data Science 2nd Edition Book Club Cohort 9  [`r fontawesome::fa(name = "youtube")`](https://www.youtube.com/playlist?list=PL3x6DOfs2NGjVMs1NtbWu4s_ZgGhGKnrN)
author: Jeremy Selva [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS) [`r fontawesome::fa(name = "linkedin")`](https://www.linkedin.com/in/jeremy-selva-085b9112a/) [`r fontawesome::fa(name = "link")`](https://jeremy-selva.netlify.app/) [`r fontawesome::fa(name = "twitter")`](https://twitter.com/JauntyJJS)
format:
  revealjs:
    theme: [dark, custom.scss]
    self-contained: false
    controls: true
    slide-number: true
    scrollable: true
    mouse-wheel: true
    preview-links: auto
    include-in-header: 
      text: |
        <meta name="github-repo" content="JauntyJJS/r4ds-bookclub-cohort9-chapter02"/>
        <meta name="twitter:title" content="Chapter 2: Data Visualisation slides for R For Data Science 2nd Edition Book Club Cohort 9"/>
        <meta name="twitter:description" content="This slide deck covers Chapter 2: Data Visualisation from the book, R For Data Science 2nd Edition. This is presented for the R4DS book club, cohort 9."/>
        <meta name="twitter:url" content="https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02"/>
        <meta name="twitter:image" content="https://raw.githubusercontent.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02/main/share-card.png"/>
        <meta name="twitter:image:alt" content="Title slide of Chapter 2: Data Visualisation from the book, R For Data Science 2nd Edition presented at the R4DS book club, cohort 9."/>
        <meta name="twitter:card" content="summary_large_image"/>
        <meta name="twitter:creator" content="@JauntyJJS"/>
        <meta name="twitter:site" content="@JauntyJJS"/>
        <meta property="og:title" content="Chapter 2: Data Visualisation from the book, R For Data Science 2nd Edition"/>
        <meta property="og:description" content="This slide deck covers Chapter 2: Data Visualisation from the book, R For Data Science 2nd Edition. This is presented for the R4DS book club, cohort 9."/>
        <meta property="og:url" content="https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02"/>
        <meta property="og:image" content="https://raw.githubusercontent.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02/main/share-card.png"/>
        <meta property="og:image:alt" content="Title slide of Chapter 2: Data Visualisation from the book, R For Data Science 2nd Edition presented at the R4DS book club, cohort 9."/>
        <meta property="og:type" content="website"/>
        <meta property="og:locale" content="en_US"/>
        <meta property="article:author" content="Jeremy Selva"/>
---

```{r setup, include=FALSE}
library(fontawesome)
```

## Introduction

This chapter shows how to visualise data using `ggplot2`. Ensure these libraries are available.

```{r}
#| echo: true

# Needed in the book
library(tidyverse)
library(palmerpenguins)
library(ggthemes)

# For the extra slides
library(scales)
library(glue)
library(ggfittext)
library(ggtext)
library(downloadthis)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## `penguins` data

The `penguins` data has 344 penguins observations with 8 columns.

```{r}
#| echo: true
print(penguins, width = Inf)

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## `penguins` data

Among the variables in penguins are:

1. `species`: a penguin’s species (Adelie, Chinstrap, or Gentoo).

2. `flipper_length_mm`: length of a penguin’s flipper, in millimeters.

3. `body_mass_g`: body mass of a penguin, in grams.

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## `penguins` data

We can take a closer look using  `dplyr::glimpse()`

```{r}
#| echo: true
dplyr::glimpse(penguins)
```

We try to find a relationship between flipper lengths and body masses for each penguins species.

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

The first argument `data` is to tell `ggplot` which the dataset to use in the graph. It gives an empty graph at first.

```{r}
#| echo: true
#| output-location: column
#| fig-height: 8
#| fig-alt: "An empty graph."

ggplot2::ggplot(
  data = penguins
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

The next argument `mapping` tells `ggplot` what variables in `penguins` holds the x and y axis. The `mapping` argument must be an output of the `ggplot2::aes` function.

```{r}
#| echo: true
#| output-location: column
#| code-line-numbers: "|3-6"
#| fig-height: 8
#| fig-alt: "A graph with only x and y axis labels."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g
      )
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

We can see that flipper lengths and body mass are displayed in the x and y axis. However, we cannot see the penguin data in the plot.

```{r}
#| echo: true
#| output-location: column
#| code-line-numbers: "3-6"
#| fig-height: 8
#| fig-alt: "A graph with only x and y axis labels."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g
      )
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

We need to specify using `geom_` what the data should be represented as a 

* bar using `geom_bar()`
* line using `geom_line()`
* boxplot using `geom_boxplot()`
* scatterplots using `geom_point()`

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

Adding `geom_point()` gives us the points in the plot. We can see that penguins with longer flippers are generally larger in their body mass.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|8"
#| fig-height: 8
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g
      )
) + 
ggplot2::geom_point()
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

The warning indicates that two of the penguins have missing body mass and/or flipper length values.

```{r}
#| echo: true

penguins |> 
  dplyr::filter(
    is.na(flipper_length_mm) | is.na(body_mass_g)
  ) |>
  print(width = Inf)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

In general, we can see that penguins with longer flippers are generally larger in their body mass. 

Does this applies for all species (Adelie, Chinstrap and Gentoo) ? 

We can do this by representing species with different coloured points.

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

To do this, we modify the `aes` function by adding `color = species`.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6"
#| fig-height: 8
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with colours."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species
      )
) + 
ggplot2::geom_point()
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

Adding `color = species` allows `ggplot` to assign a unique colour for each species and provides a legend.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "6"
#| fig-height: 8
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with colours."


ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species
      )
) + 
ggplot2::geom_point()
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

We now wish to add a smooth curve for each species. this is done by adding `geom_smooth(method = "lm")`

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|10"
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with smooth curves for each species."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species
      )
) + 
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm")
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

Instead of a line for all species, how do we add only one smooth curve to describe the relationship for all species ?

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with smooth curves for each species."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species
      )
) + 
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm")
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

We need to agree that the following are equivalent.

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|1,3-6"

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species)
) + 
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm")
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|2,4-7,9,11-14"

ggplot2::ggplot() + 
ggplot2::geom_point(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species)
) +
ggplot2::geom_smooth(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species),
  method = "lm")
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

Because we want to draw a smooth curve along all species, we need to remove the `color = species` in the `mapping` argument of `geom_smooth`.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|9,11-13"
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with smooth curves for each species."

ggplot2::ggplot() + 
ggplot2::geom_point(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species)
) +
ggplot2::geom_smooth(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g),
  method = "lm")
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

We put what mapping arguments that are common in `geom_point` and `geom_smooth` back to `ggplot`.

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|2,5-6,9,11-13"

ggplot2::ggplot() + 
ggplot2::geom_point(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g,
      color = species)
) +
ggplot2::geom_smooth(
  data = penguins,
  mapping = ggplot2::aes(
      x = flipper_length_mm, 
      y = body_mass_g),
  method = "lm")
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "|3-6"

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point(
  mapping = ggplot2::aes(
      color = species)
) +
ggplot2::geom_smooth(
  method = "lm")
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

Here is the simplified code.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with a smooth curve."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point(
  mapping = ggplot2::aes(
      color = species)
) +
ggplot2::geom_smooth(
  method = "lm")
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

Besides colour, we can create a different shape for each species.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|11"
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with a smooth curve. Different species are indicated with different colour and shape."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point(
  mapping = ggplot2::aes(
      color = species,
      shape = species)
) +
ggplot2::geom_smooth(
  method = "lm")
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

Next, we use `labs` to label the plot.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|15-22"
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with a smooth curve. A title and subtitle has been added."


ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point(
  mapping = ggplot2::aes(
      color = species,
      shape = species)
) +
ggplot2::geom_smooth(
  method = "lm") +
ggplot2::labs(
    title = "Body mass and flipper length",
    subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
    x = "Flipper length (mm)", 
    y = "Body mass (g)",
    color = "Species", 
    shape = "Species"
  ) 
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot`

Lastly, we add `scale_color_colorblind` to improve the colour palette to be colour-blind safe.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|23"
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with a smooth curve. A colour blind friendly palette is used."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point(
  mapping = ggplot2::aes(
      color = species,
      shape = species)
) +
ggplot2::geom_smooth(
  method = "lm") +
ggplot2::labs(
    title = "Body mass and flipper length",
    subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
    x = "Flipper length (mm)", 
    y = "Body mass (g)",
    color = "Species", 
    shape = "Species"
  ) +
ggthemes::scale_color_colorblind()
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Creating a `ggplot` (Extra)

In Google Chrome, we can go to Developer's mode (Press F12), press Three Dots, press More tools, press Rendering, scroll down to Emulate vision deficiencies and make changes.

More info in [Anna Monus's Blog](https://webdesign.tutsplus.com/designing-for-color-blindness-with-chrome-devtools--cms-35827a)

```{r}
#| echo: false
#| warning: false
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm with a smooth curve. A colour blind friendly palette is used."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point(
  mapping = ggplot2::aes(
      color = species,
      shape = species)
) +
ggplot2::geom_smooth(
  method = "lm") +
ggplot2::labs(
    title = "Body mass and flipper length",
    subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
    x = "Flipper length (mm)", 
    y = "Body mass (g)",
    color = "Species", 
    shape = "Species"
  ) +
ggthemes::scale_color_colorblind()
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## `ggplot2` calls

There is a concise way of using ggplot2 code to that saves typing. In general, we want to reduce the amount of extra text to make it easier to compare similar codes. 

More information will be provided in Chapter 4 when we’ll learn about the pipe, `|>` and Chapter 26 where we'll look into coding style.

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = flipper_length_mm, 
    y = body_mass_g)) +
  ggplot2::geom_point()
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

penguins |> 
  ggplot2::ggplot(
    ggplot2::aes(
      x = flipper_length_mm,
      y = body_mass_g)) + 
  ggplot2::geom_point()
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## `ggplot2` calls (Extra)

When is `flipper_length_mm` and `body_mass_g` a variable or column name ? We can use `.data` to differentiate them.

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| error: true
#| code-line-numbers: "|7-8,11-12"
#| fig-height: 4
#| fig-alt: "A scatterplot of body mass in grams vs flipper length in mm."

flipper_length_mm = "Flipper Length in mm"
body_mass_g = "Body Mass in g"

penguins |> 
  ggplot2::ggplot(
    ggplot2::aes(
      x = flipper_length_mm,
      y = body_mass_g)) + 
  ggplot2::geom_point() +
  ggplot2::labs(
    x = flipper_length_mm,
    y = body_mass_g
  )
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|7-8,11-12"
#| fig-height: 4
#| fig-alt: "A scatterplot of body mass in grams vs flipper length in mm."

flipper_length_mm = "Flipper Length in mm"
body_mass_g = "Body Mass in g"

penguins |> 
  ggplot2::ggplot(
    ggplot2::aes(
      x = .data[["flipper_length_mm"]],
      y = .data[["body_mass_g"]])) + 
  ggplot2::geom_point() +
  ggplot2::labs(
    x = flipper_length_mm,
    y = body_mass_g
  )
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## `ggplot2` calls (Extra)

Set `axis.title.y = ggplot2::element_text(angle = 0)` in `ggplot2::theme` to rotate the y axis title.

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| error: true
#| fig-height: 4
#| fig-alt: "A scatterplot of body mass in grams vs flipper length in mm."

penguins |> 
  ggplot2::ggplot(
    ggplot2::aes(
      x = .data[["flipper_length_mm"]],
      y = .data[["body_mass_g"]])) + 
  ggplot2::geom_point() +
  ggplot2::labs(
    x = "Flipper Length in mm",
    y = "Body Mass in g"
  )
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|7-9"
#| fig-height: 4
#| fig-alt: "A scatterplot of body mass in grams vs flipper length in mm with the y axis title rotated."

penguins |> 
  ggplot2::ggplot(
    ggplot2::aes(
      x = .data[["flipper_length_mm"]],
      y = .data[["body_mass_g"]])) + 
  ggplot2::geom_point() +
  ggplot2::theme(
    axis.title.y = ggplot2::element_text(angle = 0)
  ) +
  ggplot2::labs(
    x = "Flipper Length in mm",
    y = "Body Mass in g"
  )
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

How many rows are in `penguins`? How many columns?

```{r}
#| echo: true

glue::glue("
  There are {nrow(penguins)} rows and {ncol(penguins)} columns in the penguin data set
  "
)
```

A little preview of `glue` from Chapter 15.

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

What does the `bill_depth_mm` variable in the `penguins` data frame describe? Read the help for ?penguins to find out.

```{r}
#| echo: true
#| eval: false

?penguins

```

<br>

```{=html}
<iframe width="1000" height="400" src="https://allisonhorst.github.io/palmerpenguins/reference/penguins.html" title="Penguin Documentation" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

Make a scatterplot of `bill_depth_mm` vs. `bill_length_mm`. Describe the relationship between these two variables.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4-5,7"
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body depth in mm vs bill length in mm."

ggplot2::ggplot(
  data = penguins, 
  mapping = ggplot2::aes(
    x = .data[["bill_depth_mm"]], 
    y = .data[["bill_length_mm"]])
) + 
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Bill depth vs Bill Length",
    subtitle = "Small positive correaltion between bill depth and length.",
    x = "Bill Length (mm)", 
    y = "Bill Depth\n(mm)"
  ) 
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

What happens if you make a scatterplot of `species` vs. `bill_depth_mm` ?

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|5"
#| fig-height: 7
#| fig-alt: "A scatterplot of species vs bill length in mm."

ggplot2::ggplot(
  data = penguins, 
  mapping = ggplot2::aes(
    x = .data[["bill_length_mm"]], 
    y = .data[["species"]])
) + 
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Species vs Bill Length",
    subtitle = "We get a dot plot but it is hard to see the distribution.",
    x = "Bill Depth (mm)", 
    y = "Species"
  ) 
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

What might be a better choice of geom ?

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|7"
#| fig-height: 7
#| fig-alt: "A boxplot of bill length in mm for each species."

ggplot2::ggplot(
  data = penguins, 
  mapping = ggplot2::aes(
    x = .data[["bill_length_mm"]], 
    y = .data[["species"]])
) + 
  ggplot2::geom_boxplot() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Species vs Bill Length",
    subtitle = "A box plot may be better.",
    x = "Bill Depth (mm)", 
    y = "Species"
  ) 
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::


## Exercise 2.2.5

Why does the following give an error and how would you fix it?

```{r}
#| echo: true
#| error: true
#| warning: true
#| output-location: column

ggplot2::ggplot(data = penguins) + 
  ggplot2::geom_point()
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

We need to set mapping parameters using the `aes` function to tell `ggplot` which columns in `penguins` are used for the x or y axis respectively.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|3-5"
#| fig-height: 7
#| fig-alt: "A scatterplot of bill depth in mm vs bill length in mm."

ggplot(data = penguins) + 
  geom_point(
    mapping = ggplot2::aes(
    x = .data[["bill_depth_mm"]], 
    y = .data[["bill_length_mm"]]  
  )
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

What does the `na.rm` argument do in `geom_point()`? What is the default value of the argument? Create a scatterplot where you successfully use this argument set to `TRUE`.

```{r}
#| echo: true
#| eval: false

?ggplot2::geom_point()

```

<br>

```{=html}
<iframe width="1000" height="400" src="https://ggplot2.tidyverse.org/reference/geom_point.html" title="geom_point Documentation" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

Warning message is removed.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|8"
#| fig-height: 7
#| fig-alt: "A scatterplot of bill depth in mm vs bill length in mm."

ggplot2::ggplot(
  data = penguins, 
  mapping = ggplot2::aes(
    x = .data[["bill_depth_mm"]], 
    y = .data[["bill_length_mm"]])
) + 
  ggplot2::geom_point(
    na.rm = TRUE,
) +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Bill depth vs Bill Length",
    subtitle = "Small positive correaltion between bill depth and length.",
    x = "Bill Length (mm)", 
    y = "Bill Depth\n(mm)"
  ) 

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

Add the following caption to the plot you made in the previous exercise: “Data come from the `palmerpenguins` package.” Hint: Take a look at the documentation for `labs()`.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|16"
#| fig-height: 7
#| fig-alt: "A scatterplot of bill depth in mm vs bill length in mm with caption."

ggplot2::ggplot(
  data = penguins, 
  mapping = ggplot2::aes(
    x = .data[["bill_depth_mm"]], 
    y = .data[["bill_length_mm"]])
) + 
  ggplot2::geom_point(
    na.rm = TRUE,
) +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Bill depth vs Bill Length",
    subtitle = "Small positive correaltion between bill depth and length.",
    caption = "Data come from the palmerpenguins package.",
    x = "Bill Length (mm)", 
    y = "Bill Depth\n(mm)"
  ) 

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

Image replication

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| fig-height: 7
#| fig-alt: "A scatterplot of body mass in grams vs flipper length in mm, coloured by bill depth with a smooth curve."

ggplot2::ggplot(
  data = penguins, 
  mapping = ggplot2::aes(
    x = .data[["flipper_length_mm"]], 
    y = .data[["body_mass_g"]])
  ) + 
  ggplot2::geom_point(
    mapping = ggplot2::aes(
      color = .data[["bill_depth_mm"]]
    )
  ) +
  ggplot2::geom_smooth()

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

What does `se = FALSE` in `geom_smooth` do ? It plots the smooth line without confidence interval.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|9"
#| fig-height: 6
#| fig-alt: "A scatterplot of body mass in grams vs flipper length in mm, coloured by each island, with a smooth curve without confidence interval plotted for each island."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["flipper_length_mm"]], 
    y = .data[["body_mass_g"]], 
    color = .data[["island"]])
) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth(se = FALSE)

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.2.5

What is the output difference between these two codes ? There is no difference.

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| fig-alt: "A scatterplot of body mass in grams vs flipper length in mm with a smooth curve."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["flipper_length_mm"]], 
    y = .data[["body_mass_g"]])
) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth()
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| fig-alt: "A scatterplot of body mass in grams vs flipper length in mm with a smooth curve."

ggplot2::ggplot() + 
ggplot2::geom_point(
  data = penguins,
  mapping = ggplot2::aes(
      x = .data[["flipper_length_mm"]], 
      y = .data[["body_mass_g"]])
) +
ggplot2::geom_smooth(
  data = penguins,
  mapping = ggplot2::aes(
      x = .data[["flipper_length_mm"]], 
      y = .data[["body_mass_g"]])
  )
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Distributions

For categorical variables, we can view the distribution using bar charts.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|7"
#| fig-height: 7
#| fig-alt: "A barchart showing the count of each penguin species."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = species
    )
) + 
ggplot2::geom_bar()

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Distributions

To arrange them based on frequencies, we can use `fct_infreq` to convert the categorical variable to a factor and reorder the level of the factor based on the frequencies. More on Chapter 17.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4"
#| fig-height: 7
#| fig-alt: "A barchart showing the count of each penguin species. This time, the species are sorted by their frequencies."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = forcats::fct_infreq(species)
    )
) + 
ggplot2::geom_bar()

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::


## Visualising Distributions

For numerical variables, we can view the distribution using histograms.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|7-8"
#| fig-height: 7
#| fig-alt: "A histogram showing the distribution of the penguin's body mass in grams."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = body_mass_g
    )
) + 
ggplot2::geom_histogram(
  binwidth = 200)

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Distributions

We may need to adjust the `binwidth` argument if necessary.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|7-8"
#| fig-height: 7
#| fig-alt: "A histogram showing the distribution of the penguin's body mass in grams with binwidth set to 20."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = body_mass_g
    )
) + 
ggplot2::geom_histogram(
  binwidth = 20)

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Distributions

You can specify a function for calculating `binwidth`. More info about functions in Chapter 26.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|7-8"
#| fig-height: 7
#| fig-alt: "A histogram showing the distribution of the penguin's body mass in grams with binwidth set by a function."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = body_mass_g
    )
) + 
ggplot2::geom_histogram(
  binwidth = function(x) 2 * stats::IQR(x) / (length(x)^(1/3)))

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Distributions

Alternatively, we can view the distribution using density plot.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|7"
#| fig-height: 7
#| fig-alt: "A density plot showing the distribution of the penguin's body mass in grams."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = body_mass_g
    )
) + 
ggplot2::geom_density()

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.4.3

Make a bar plot of species of penguins, where you assign species to the `y` aesthetic (instead of `x`). How is this plot different?

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|4"
#| fig-height: 7
#| fig-alt: "A vertical barchart showing the count of each penguin species."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["species"]])
) +
  ggplot2::geom_bar()
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|4"
#| fig-height: 7
#| fig-alt: "A horizontal barchart showing the count of each penguin species."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    y = .data[["species"]])
) +
  ggplot2::geom_bar()
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.4.3

Which aesthetic, `color` or `fill`, is more useful for changing the color of bars?

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|7"
#| fig-height: 7
#| fig-alt: "A vertical barchart showing the count of each penguin species. Border of the bars are green."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["species"]])
) +
  ggplot2::geom_bar(
    color = "green"
  )
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|7"
#| fig-height: 7
#| fig-alt: "A vertical barchart showing the count of each penguin species. Interior colour of the bars are green."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["species"]])
) +
  ggplot2::geom_bar(
    fill = "green"
  )
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.4.3

What does the bins argument in `geom_histogram` do?

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|8"
#| fig-height: 7
#| fig-alt: "A histogram showing the penguin's body mass in grams using 5 bins."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["body_mass_g"]])
) + 
ggplot2::geom_histogram(
  color = "green",
  bins = 5)
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|8"
#| fig-height: 7
#| fig-alt: "A histogram showing the penguin's body mass in grams using 10 bins."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["body_mass_g"]])
) + 
ggplot2::geom_histogram(
  color = "green",
  bins = 10)
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.4.3

Make a histogram of the `carat` variable in the `diamonds` dataset that is available when you load the tidyverse package. Experiment with different binwidths. What binwidth reveals the most interesting patterns?

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|8"
#| fig-height: 5
#| fig-alt: "A histogram showing the diamond's caret using binwidth of 1."

ggplot2::ggplot(
  data = diamonds,
  mapping = ggplot2::aes(
    x = .data[["carat"]])
) + 
ggplot2::geom_histogram(
  color = "green",
  binwidth = 1)
```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| code-line-numbers: "|8"
#| fig-height: 5
#| fig-alt: "A histogram showing the diamond's caret using binwidth of 0.01."

ggplot2::ggplot(
  data = diamonds,
  mapping = ggplot2::aes(
    x = .data[["carat"]])
) + 
ggplot2::geom_histogram(
  color = "green",
  binwidth = 0.01)
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Relationships

We can use a side-by-side boxplot to view the relationship between a numerical and a categorical variable.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|8"
#| fig-height: 7
#| fig-alt: "Boxplots of the penguin's body mass in grams for each species."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = species, 
     y = body_mass_g
    )
) + 
ggplot2::geom_boxplot()

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Relationships

Alternatively, we can view the distribution using density plot. We use `linewidth = 0.75` to make the lines stand out a bit more against the background.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|8-10"
#| fig-height: 7
#| fig-alt: "Density plots of the penguin's body mass in grams for each species."

ggplot2::ggplot(
    data = penguins,
  mapping = ggplot2::aes(
     x = body_mass_g, 
     color = species
    )
) + 
ggplot2::geom_density(
  linewidth = 0.75
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Relationships

Additionally, we can set `fill = species` and use `alpha` to add transparency to the filled density curve.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|5-6,10-11"
#| fig-height: 7
#| fig-alt: "Density plots of the penguin's body mass in grams for each species with filled colours."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = body_mass_g, 
     color = species,
     fill = species
    )
) + 
ggplot2::geom_density(
  linewidth = 0.75,
  alpha = 0.5
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Relationships

Stacked bar plots are useful to visualize the relationship between two categorical variables.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|5,8"
#| fig-height: 7
#| fig-alt: "A stacked bar plot of showing the count of each penguin's species in each island."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = island, 
     fill = species
    )
) + 
ggplot2::geom_bar()
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Relationships

By setting `position = "fill"`, we create a relative frequency plot.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|9"
#| fig-height: 7
#| fig-alt: "A relative frequency plot showing the proportion of each penguin's species living in each island."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = island, 
     fill = species
    )
) + 
ggplot2::geom_bar(
  position = "fill"
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Relationships

Scatterplots are useful to visualize the relationship between two numerical variables.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| fig-height: 7
#| fig-alt: "A scatterplot of the penguin's body mass in grams vs flipper length in mm."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point()
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Relationships

To visualize the relationship between three or more variables. Things get a bit tricky. For example, we can let colors of points represent species and the shapes of points represent islands but it is hard to see anything meaningful.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|10-11"
#| fig-height: 7
#| fig-alt: "A scatterplot of the penguin's body mass in grams vs flipper length in mm. The colours represent different species and the shapes represent different islands."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point(
  mapping = ggplot2::aes(
     color = species, 
     shape = island
    )
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Visualising Relationships

To counter this issue we can split plots into different facets, subplots that each display one subset of the data, using `facet_wrap`

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|14-16"
#| fig-height: 7
#| fig-alt: "A facet of scatterplots showing the penguin's body mass in grams vs flipper length in mm. The colours and shapes represent different species. The different facets are splitted based on the differnt islands."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point(
  mapping = ggplot2::aes(
     color = species, 
     shape = species
    )
) +
ggplot2::facet_wrap(
  ggplot2::vars(island)
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

Which variables in mpg are categorical? Which variables are numerical? How can you see this information when you run mpg? Unfortunately `?mpg` is not so clear.

```{r}
#| echo: true
#| eval: false

?mpg

```

<br>

```{=html}
<iframe width="1000" height="400" src="https://ggplot2.tidyverse.org/reference/mpg.html" title="mpg Documentation" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

We can use `dplyr::glimpse` to identify which variables are categorical and numeric.

```{r}
#| echo: true

dplyr::glimpse(mpg)

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

Make a scatterplot of `hwy` vs. `displ` using the mpg data frame

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon"
  ) 

```

## Exercise 2.5.5

Next, map a third, numerical/categorical variable to `color`, then `size`, then both `color` and `size`, then `shape`.

::: {.panel-tabset}

### Color (cty)

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres coloured by city miles per gallon."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    color = .data[["cty"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    colour = "City miles\nper gallon"
  ) 

```

### Color (class)

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres coloured by the type of cars."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    color = .data[["class"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    color = "Type of Car"
  ) 

```

### Size (cty)

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres. The size is based on the city miles per gallon."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    size = .data[["cty"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    colour = "City miles\nper gallon"
  ) 

```

### Size (class)

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres. The size is based on the type of car."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    size = .data[["class"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    color = "Type of Car"
  ) 

```

:::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

Next, map a third, numerical/categorical variable to `color`, then `size`, then both `color` and `size`, then `shape`.

::: {.panel-tabset}

### Color and Size (cty)

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6-7"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres coloured by the city miles per gallon. The size is also based on the city miles per gallon."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    color = .data[["cty"]],
    size = .data[["cty"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    colour = "City miles\nper gallon"
  ) 

```

### Color and Size (class)

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6-7"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres coloured by the type of car. The size is also based on the type of car."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    color = .data[["class"]],
    size = .data[["class"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    color = "Type of Car"
  ) 

```

:::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

Next, map a third, numerical/categorical variable to color, then size, then both color and size, then shape

::: {.panel-tabset}

### Shape (cty)

```{r}
#| echo: true
#| error: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6"

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    shape = .data[["cty"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    colour = "City miles\nper gallon"
  ) 

```

### Shape (cty) Fixed

```{r}
#| echo: true
#| error: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6,9"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres. The shape is based on the city miles per gallon."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    shape = .data[["cty"]])
) +
  ggplot2::geom_point() +
  ggplot2::scale_shape_binned() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    colour = "City miles\nper gallon"
  ) 

```

### Shape (class)

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6"
#| fig-height: 5
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres. The shape is based on the type of car. However the shape for the suv is missing."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    shape = .data[["class"]])
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    color = "Type of Car"
  ) 

```

### Shape (class) Fixed

See [stackoverflow](https://stackoverflow.com/questions/16813278/cycling-through-point-shapes-when-more-than-6-factor-levels) link for more info.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6,9"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres. The shape is based on the type of car. This time, the shape for the suv is not missing."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    shape = .data[["class"]])
) +
  ggplot2::geom_point() +
ggplot2::scale_shape_manual(values= c(0:7)) +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Engine displacement in litres", 
    y = "Highway miles\nper gallon",
    color = "Type of Car"
  ) 

```

:::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

In the scatterplot of `hwy` vs. `displ`, what happens if you map a third variable to `linewidth`?

::: {.panel-tabset}

### Lucky case

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    linewidth = .data[["year"]])
) +
  ggplot2::geom_point()

```

### Unlucky case

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6,9"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres. The smooth curve line width is based on the year of manufacture."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    linewidth = .data[["year"]])
) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth()

```

### Oh No case

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|6,9"
#| fig-height: 7
#| fig-alt: "A scatterplot showing the car's highway miles per gallon vs engine displacement in litres. The smooth curve line width is based on the type of car."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["displ"]], 
    y = .data[["hwy"]],
    linewidth = .data[["class"]])
) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth()

```

:::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

What happens if you map the same variable to multiple aesthetics?

::: {.panel-tabset}

### Lucky case

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4-6,9"
#| fig-height: 7
#| fig-alt: "A barchart showing the frequency of each type of car in the mpg dataset."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["class"]], 
    colour = .data[["class"]],
    fill = .data[["class"]])
  
) +
  ggplot2::geom_bar() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "Type of Car", 
    y = "Count",
    color = "Type of Car",
    fill = "Type of Car"
  ) 

```

### Unlucky case

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4-6,9"
#| fig-height: 7
#| fig-alt: "A scatterplot showing city miles per gallon against itself with colour scales by itself."

ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
    x = .data[["cty"]], 
    y = .data[["cty"]],
    colour = .data[["cty"]])
  
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    x = "City miles per gallon", 
    y = "City miles\nper gallon",
    color = "City miles\nper gallon",
  ) 

```

:::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

Make a scatterplot of `bill_depth_mm` vs. `bill_length_mm` and color the points by `species`. What does adding coloring by `species` reveal about the relationship between these two variables? What about faceting by species?

::: {.panel-tabset}

### No facet

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4-6"
#| fig-height: 7
#| fig-alt: "A scatterplot of the penguin's bill depth in mm vs bill depth in mm. The colours represent different species."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["bill_length_mm"]], 
    y = .data[["bill_depth_mm"]],
    colour = .data[["species"]])
  
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Bill Depth(mm) vs Bill Length (mm)",
    subtitle = glue::glue("
        \U2022 Adelie has longer bill depth but shorter bill length than Gentoo.
        \U2022 Chinstrap has longer bill depth and length than Adelie and Gentoo.
    "),
    x = "Bill Length (mm)", 
    y = "Bill Depth\n(mm)",
    color = "Species",
  ) 

```

### With facet

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4-6,10-12"
#| fig-height: 7
#| fig-alt: "A facet of scatterplots of the penguin's bill depth in mm vs bill depth in mm. The colours represent different species. The facet of scatterplots are splitted based on different species as well."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["bill_length_mm"]], 
    y = .data[["bill_depth_mm"]],
    colour = .data[["species"]])
  
) +
  ggplot2::geom_point() +
  ggplot2::facet_wrap(
    facets = ggplot2::vars(.data[["species"]])
) +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Bill Depth(mm) vs Bill Length (mm)",
    subtitle = glue::glue("
        \U2022 Adelie has longer bill depth but shorter bill length than Gentoo.
        \U2022 Chinstrap has longer bill depth and length than Adelie and Gentoo.
    "),
    x = "Bill Length (mm)", 
    y = "Bill Depth\n(mm)",
    color = "Species",
  ) 

```

:::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

Why does the following yield two separate legends? How would you fix it to combine the two legends?

::: {.panel-tabset}

### Two Legend

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4-7,22"
#| fig-height: 7
#| fig-alt: "A scatterplots of the penguin's bill depth in mm vs bill depth in mm. The colours and shapes represent different species. However, there were two legends in the plot. One for colour and the other for shape."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["bill_length_mm"]], 
    y = .data[["bill_depth_mm"]],
    colour = .data[["species"]],
    shape = .data[["species"]])
  
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Bill Depth(mm) vs Bill Length (mm)",
    subtitle = glue::glue("
        \U2022 Adelie has longer bill depth but shorter bill length than Gentoo.
        \U2022 Chinstrap has longer bill depth and length than Adelie and Gentoo.
    "),
    x = "Bill Length (mm)", 
    y = "Bill Depth\n(mm)",
    color = "Species",
  ) 

```

### Two Legend Fixed

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4-7,22-23"
#| fig-height: 7
#| fig-alt: "A scatterplots of the penguin's bill depth in mm vs bill depth in mm. The colours and shapes represent different species. This time, there were only one legend in the plot."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["bill_length_mm"]], 
    y = .data[["bill_depth_mm"]],
    colour = .data[["species"]],
    shape = .data[["species"]])
  
) +
  ggplot2::geom_point() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Bill Depth(mm) vs Bill Length (mm)",
    subtitle = glue::glue("
        \U2022 Adelie has longer bill depth but shorter bill length than Gentoo.
        \U2022 Chinstrap has longer bill depth and length than Adelie and Gentoo.
    "),
    x = "Bill Length (mm)", 
    y = "Bill Depth\n(mm)",
    color = "Species",
    shape = "Species"
  ) 

```

:::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.5.5

Create the two following stacked bar plots. Which question can you answer with the first one? Which question can you answer with the second one?

::: {.panel-tabset}

### First 

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|5,8"
#| fig-height: 7
#| fig-alt: "A stacked bar plot showing the proportion of penguin species in a given island."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["island"]],
    fill = .data[["species"]])
) +
  ggplot2::geom_bar(
    position = "fill"
  ) +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Proportion Of Species In A Given Island",
    subtitle = glue::glue("
        \U2022 Torgersen only has Adelie.
        \U2022 Dream has similar proportions of Adelie and Chinstrap living there.
        \U2022 Biscoe has 1/4 Adelie and 3/4 Gentoo living there.
    "),
    x = "Island", 
    y = "Proportion",
    fill = "Species"
  ) 
```

### Second

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|5,8"
#| fig-height: 7
#| fig-alt: "A stacked bar plot showing the island habitat distribution for each species."

ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
    x = .data[["species"]],
    fill = .data[["island"]])
) +
  ggplot2::geom_bar(
    position = "fill"
  ) +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
) +
ggplot2::labs(
    title = "Island habitat distribution for each species",
    subtitle = glue::glue("
        \U2022 Adelie lives in all three islands at similar proportions.
        \U2022 Chinstrap only lives in Dream.
        \U2022 Gentoo only lives in Biscoe.
    "),
    x = "Species", 
    y = "Proportion",
    fill = "Island"
  ) 
```

:::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Save Plots

Use `ggsave` to save a `ggplot` plot.

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

penguin_plot <- ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point()

ggplot2::ggsave(
  filename = "penguin-plot.png",
  plot = penguin_plot,
  width = 6, 
  height = 7)
```

:::

::: {.column width="50%"}

```{r}
#| echo: false
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm"

penguin_plot <- ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = flipper_length_mm, 
     y = body_mass_g
    )
) + 
ggplot2::geom_point()

penguin_plot

```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.6.1

Run the following lines of code. Which of the two plots is saved as mpg-plot.png? Why?

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

car_bar_plot <- ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
     x = .data[["class"]]
    )
) + 
ggplot2::geom_bar()

car_scatter_plot <- ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
     x = .data[["cty"]],
     y = .data[["hwy"]]
    )
) + 
ggplot2::geom_point()

ggplot2::ggsave(
  filename = "mpg-plot.png"
)
```

:::

::: {.column width="50%"}

```{r}
#| echo: false
#| fig-height: 4
#| fig-alt: "A bar chart of the type of cars"

car_bar_plot <- ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
     x = .data[["class"]]
    )
) + 
ggplot2::geom_bar()

car_bar_plot
```

```{r}
#| echo: false
#| fig-height: 4
#| fig-alt: "A scatterplot of the car's city miles per gallon vs highway miles per gallon."

car_scatter_plot <- ggplot2::ggplot(
  data = mpg,
  mapping = ggplot2::aes(
     x = .data[["cty"]],
     y = .data[["hwy"]]
    )
) + 
ggplot2::geom_point()

car_scatter_plot
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.6.1

It is the second plot because by default value of the `plot` argument, `ggsave` saves the last plot displayed.

```{r}
#| echo: true
#| eval: false

?ggplot2::ggsave

```

<br>

```{=html}
<iframe width="1000" height="400" src="https://ggplot2.tidyverse.org/reference/ggsave.html" title="ggsave Documentation" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.6.1

What do you need to change in the code above to save the plot as a PDF instead of a PNG?

```{r}
#| echo: true
#| eval: false

ggplot2::ggsave(
  filename = "mpg-plot.pdf"
)

ggplot2::ggsave(
  filename = "no_file_extension",
  device = "pdf"
)

```

<br>

```{=html}
<iframe width="1000" height="250" src="https://ggplot2.tidyverse.org/reference/ggsave.html" title="ggsave Documentation" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Exercise 2.6.1

How could you find out what types of image files would work in `ggsave()`? Use the `device` argument.

```{r}
#| echo: true
#| eval: false

ggplot2::ggsave(
  filename = "no_file_extension",
  device = "pdf"
)

```

<br>

```{=html}
<iframe width="1000" height="300" src="https://ggplot2.tidyverse.org/reference/ggsave.html" title="ggsave Documentation" ></iframe>
```


::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Common Problems

Spelling mistakes (Pics from [Allison Horst](https://allisonhorst.com/))

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

![](images/Spelling.png){fig-alt="A comic showing a Crocodile programmer getting angry that because he does not know the error was caused by a spelling mistake until a Flamingo programmer steps in to help."}


## Common Problems

Plus in wrong place

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| error: true
#| fig-alt: "An empty plot."

ggplot2::ggplot(data = mpg) 
+ ggplot2::geom_point(
  mapping = ggplot2::aes(x = displ, y = hwy))

```

:::

::: {.column width="50%"}

```{r}
#| echo: true
#| error: true
#| fig-alt: "A scatterplot of the car's engine displacemen in litres vs highway miles per gallon."

ggplot2::ggplot(data = mpg) + 
  ggplot2::geom_point(
    mapping = ggplot2::aes(x = displ, y = hwy))

```

:::

::::

## Summary

Chapter 2 helps you learn the basics of `ggplot2`. More `ggplot2` related techniques will be covered on Chapter 10 to Chapter 12.

The rest of my slides are some thorny "issues" that I have faced when using `ggplot2` and how I handle them (after hours of searching).

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Not enough discrete colours. Check out `ggthemes::tableau_color_pal`

```{r}
#| echo: true

scales::show_col(
  colours = ggthemes::tableau_color_pal("Classic 20")(20), 
  ncol = 6)

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Colour-blind friendly discrete colours. Check out `ggthemes::colorblind_pal` for [Okabe Ito](https://mikemol.github.io/technique/colorblind/2018/02/11/color-safe-palette.html) colour palette. But 8 may not always be sufficient ...

```{r}
#| echo: true

scales::show_col(
  colours = ggthemes::colorblind_pal()(8), 
  ncol = 4)

```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Both colour-blind friendly discrete and continunus colours. Check out [microshades](https://github.com/KarstensLab/microshades)

```{=html}
<iframe width="1000" height="500" src="https://karstenslab.github.io/microshades/" title="microshades homepage" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Both colour-blind friendly discrete and continunus colours. Check out [microshades](https://github.com/KarstensLab/microshades)

```{=html}
<iframe width="1000" height="500" src="https://www.youtube.com/embed/iVIfLW2VU5M" frameborder="0" allowfullscreen></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Not enough shapes. Check out [`ggstars`](https://github.com/xiangpin/ggstar/)

```{=html}
<iframe width="1000" height="500" src="https://cran.r-project.org/web/packages/ggstar/vignettes/ggstar.html" title="ggstar homepage" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Facing long axis labels. See [Andrew Heiss's blog](https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/).

```{=html}
<iframe width="1000" height="500" src="https://www.andrewheiss.com/blog/2022/06/23/long-labels-ggplot/" title="Andrew Heiss blog" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Need to label your bar charts. Consider [`ggfittext`](https://github.com/wilkox/ggfittext)

```{=html}
<iframe width="1000" height="500" src="https://wilkox.org/ggfittext/" title="ggfittext homepage" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Need to label your bar charts quickly. Consider [`ggfittext`](https://github.com/wilkox/ggfittext)

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|12"
#| fig-height: 7
#| fig-alt: "A barchart plot showing the frequency of each penguin's species with labels."

island_count <- penguins |>
  dplyr::reframe(count = dplyr::n(), .by = c("species"))

ggplot2::ggplot(
  data = island_count,
  mapping = ggplot2::aes(
    x = .data[["species"]],
    y = .data[["count"]],
    fill = .data[["species"]]),
) +
  ggplot2::geom_col() +
  ggfittext::geom_bar_text() +
ggplot2::theme(
  axis.title.y = ggplot2::element_text(angle = 0)
)
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Need to add text annotation. Consider [`ggtext`](https://github.com/wilkelab/ggtext/).

```{=html}
<iframe width="1000" height="500" src="https://wilkelab.org/ggtext/" title="ggtext homepage" ></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Here is my example.

```{r}
#| echo: true
#| warning: true
#| output-location: column
#| code-line-numbers: "|4-6,17,19,26-28"
#| fig-height: 7
#| fig-alt: "A barchart plot showing the frequency of each penguin's species with labels."

island_count <- penguins |>
  dplyr::reframe(count = dplyr::n(), .by = c("species"))

species_colours <- list("Adelie" = "#D55E00",
                        "Chinstrap" = "#009E73",
                        "Gentoo" = "#0072B2")

ggplot2::ggplot(
  data = island_count,
  mapping = ggplot2::aes(
    x = .data[["species"]],
    y = .data[["count"]],
    fill = .data[["species"]]),
) +
  ggplot2::geom_col() +
  ggfittext::geom_bar_text() +
  ggplot2::scale_fill_manual(values = species_colours) +
ggplot2::theme(
  plot.subtitle = ggtext::element_markdown(),
  axis.title.y = ggtext::element_markdown(angle = 0)
) +
ggplot2::labs(
    x = "Islands",
    y = "Count",
    title = "Penguin Species",
    subtitle = glue::glue("
    The penguin data has a total of {island_count$count[island_count$species == \"Adelie\"]} <span style=\"color:{species_colours$Adelie}\">**Adelie**</span>, {island_count$count[island_count$species == \"Chinstrap\"]} <span style=\"color:{species_colours$Chinstrap}\">**Chinstrap**</span> and {island_count$count[island_count$species == \"Gentoo\"]} <span style=\"color:{species_colours$Gentoo}\">**Gentoo**</span>
    ")
  )
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

See [Royal Statistical Society Best Practices for Data Visualisation](https://royal-statistical-society.github.io/datavisguide/docs/styling.html) and [Cara Thompsom's NHRS 2022 Talk](https://www.cararthompson.com/talks/nhsr2022-level-up/) for more `ggtext` examples.

:::: {.columns}

::: {.column width="50%"}

```{=html}
<iframe width="1000" height="500" src="https://royal-statistical-society.github.io/datavisguide/docs/styling.html" title="RSS example" ></iframe>
```

:::

::: {.column width="50%"}

```{=html}
<iframe width="1000" height="500" src="https://www.cararthompson.com/talks/nhsr2022-level-up/" title="Cara Thompsom NHRS 2022 Talk" ></iframe>
```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Don't know which plot your client wants. Create buttons using `download_this` in your html document.

:::: {.columns}

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false

penguin_plot <- ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = .data[["flipper_length_mm"]], 
     y = .data[["body_mass_g"]]
    )
) + 
ggplot2::geom_point()

downloadthis::download_this(
  penguin_plot,
  output_name = "penguin-plot",
  ggsave_args = list(width = 6, height = 7))

```

:::

::: {.column width="50%"}

```{r}
#| echo: false
#| fig-height: 7
#| fig-alt: "A scatterplot of penguin's body mass in grams vs flipper length in mm"

penguin_plot <- ggplot2::ggplot(
  data = penguins,
  mapping = ggplot2::aes(
     x = .data[["flipper_length_mm"]], 
     y = .data[["body_mass_g"]]
    )
) + 
ggplot2::geom_point()

penguin_plot

downloadthis::download_this(
  penguin_plot,
  output_name = "penguin-plot",
  ggsave_args = list(width = 6, height = 7))

```

:::

::::

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::

## Extra

Learn from `ggplot2` mishaps. See [Kara Woo's RStudio 2020 Conference talk](https://www.youtube.com/watch?v=izV-qK3nlhA).

```{=html}
<iframe width="1000" height="500" src="https://www.youtube.com/embed/izV-qK3nlhA" frameborder="0" allowfullscreen></iframe>
```

::: footer

https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02
[`r fontawesome::fa(name = "link")`](https://jauntyjjs.github.io/r4ds-bookclub-cohort9-chapter02/) [`r fontawesome::fa(name = "github")`](https://github.com/JauntyJJS/r4ds-bookclub-cohort9-chapter02)

:::
